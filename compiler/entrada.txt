

println((2*1)*3)
println(-1+4)
println(-2+(4*2)+(10/2))
println(-2.5+(4.4*2.1)+(10.5/2.2))




println(true)
println(false)
println(false || false)
println(1>3 || 1>3)



println(false && false)
println(false && true)
println(true && false)
println(true && true)


println(!true)





println(i64::pow(2,2))

println(f64::pow(3.3,2.2))




let mut x : i64 = 10;
let mut a : i64 = 10;
let mut b : f64 = 10.2;
let mut c : bool = true;
let mut d : String = "hello world";


println(x);
println(a);
println(b);
println(c);
println(d);

println(x + a);









println("Hello world"<"hola");

println((2*1)*3);
println(-1+4);
println(-2+(4*2)+(10/2));
println(-2.5+(4.4*2.1)+(10.5/2.2));

println(true);
println(false);
println(false || false);
println(1>3 || 1>3);



println(false && false);
println(false && true);
println(true && false);
println(true && true);



let mut x : i64 = 10;
let mut a : i64 = 15;

let mut z = 10;
let mut a = 4.4;

println(z as f64);


let z : i64 = 33;
let y : i64 = 55;
let a : char = 'm';
println(z);
println(z as f64);
println('a');
println(a);

let a = 'm';
println(a);


let mut a : i64 = 15;
println(a);
a = 3;
println(a);




let a:i64 = 100;
let b:i64 = 100;
let c:i64 = 7;
let f:bool = true;
let j:f64 = 10.0;
let k:f64 = 10.0;

println("");
println("");
if a > b || b < c {
    println(">>>>>> Esto no debería de imprimirse");
}else{
    println(">>>>>> Esto debería de imprimirse");
}



if a == b && j == k || 14 != c {
    println(">>>>>> Esto debería de imprimirse");
}else{
    println(">>>>>> Esto no debería de imprimirse");
}


let val1:i64 = 5;
let resp:i64 = 5;
let mut valorVerdadero : i64 = 100;




if((valorVerdadero == (50 + 50 + (val1 - val1))) && ! ! ! ! ! ! ! ! ! ! true) {
    println(">>>>>> En este lugar deberia de entrar :)");
    valorVerdadero = 50;
}
println(valorVerdadero);




let val1:i64 = 10;
let resp:i64 = 5;
let mut valorVerdadero : i64 = 100;



if  val1 < resp {
    println("no");
} else if val1 > resp {
    println("este si");
} else {
    println("else");
}



let mut var1 = 0;
while var1 < 10 {
    println(var1);
    var1 = var1 + 1;
}
println("");






/******************************************************************************

                            Online Rust Compiler.
                Code, Compile, Run and Debug Rust program online.
Write your code in this editor and press "Run" button to execute it.

*******************************************************************************/
fn TypeOf<T>(_: &T) {
    println!("{}", std::any::type_name::<T>())
}

fn main() {
    let a = 30.3 as i64;
    println!("{}", a );
    TypeOf(&a);
}
