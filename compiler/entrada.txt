
fn main(){
    println!("hola mundo!!!!");
    println!((2*1)*3);
    println!(-1+4);
    println!(-2+(4*2)+(10/2));
    println!(-2.5+(4.4*2.1)+(10.5/2.2));

    println!((2*1)*3);
    println!(-1+4);
    println!(-2+(4*2)+(10/2));
    println!(-2.5+(4.4*2.1)+(10.5/2.2));



    println!(true);
    println!(false);
    println!(false || false);
    println!(1>3 || 1>3);

    println!(false && false);
    println!(false && true);
    println!(true && false);
    println!(true && true);


    println!(!true);

    println!(i64::pow(2,2));

    println!(f64::pow(3.3,2.2));
}








fn main() {
    let mut x : i64 = 10;
    let mut a : i64 = 10;
    let mut b : f64 = 10.2;
    let mut c : bool = true;
    let mut d : String = "hello world";


    println!(x);
    println!(a);
    println!(b);
    println!(c);
    println!(d);

    println!(x + a);
    println!("Hello world"<"hola");





    let mut x : i64 = 10;
    let mut a : i64 = 15;

    let mut z = 10;
    let mut a = 4.4;

    println!("{}",z as f64);


    let z : i64 = 33;
    let y : i64 = 55;
    let a : char = 'm';
    println!(z);
    println!("{}",z as f64);
    println!('a');
    println!(a);

    let a = 'm';
    println!(a);


    let mut a : i64 = 15;
    println!(a);
    a = 3;
    println!(a);
}






-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-------------------------------------- PRUEBAS CON LENGUAJE RUST ------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------


fn main() {
    let a:i64 = 100;
    let b:i64 = 100;
    let c:i64 = 7;
    let f:bool = true;
    let j:f64 = 10.0;
    let k:f64 = 10.0;

    println!("");
    println!("");
    if a > b || b < c {
        println!(">>>>>> Esto no debería de imprimirse");
    }else{
        println!(">>>>>> Esto debería de imprimirse");
    }



    if a == b && j == k || 14 != c {
        println!(">>>>>> Esto debería de imprimirse");
    }else{
        println!(">>>>>> Esto no debería de imprimirse");
    }


    let val1:i64 = 5;
    let resp:i64 = 5;
    let mut valorVerdadero : i64 = 100;




    if((valorVerdadero == (50 + 50 + (val1 - val1))) && ! ! ! ! ! ! ! ! ! ! true) {
        println!(">>>>>> En este lugar deberia de entrar :)");
        valorVerdadero = 50;
    }
    println!(valorVerdadero);
}









/******************************************************************************

                            Online Rust Compiler.
                Code, Compile, Run and Debug Rust program online.
Write your code in this editor and press "Run" button to execute it.

*******************************************************************************/
fn TypeOf<T>(_: &T) {
    println!("{}", std::any::type_name::<T>())
}

fn main() {
    let a = 30.3 as i64;
    println!("{}", a );
    TypeOf(&a);
}





























fn saludo(){
    println!("Hola mundo!!!");
    let mut a: i64 = 3;
    let mut b: i64 = 3;
    println!("la suma es : {}",a+b);
}




fn suma(n1: i64, n2: i64) -> i64{
    println!("la suma es: {}", n1+n2);
    println!("La resta es: {}", n1-n2);
    return 0;
}


fn sumaRetorno(n1: i64, n2: i64) -> i64{
    return n1+n2;
}



fn main() {
    saludo();

    let mut var1 = 6;
    suma(var1 - 2,3);
    println!("despues de la funcion suma");

    let mut var1 = 6;
    println!("{}",sumaRetorno(var1 - 2,3));
    println!("despues de la funcion suma");
}



















fn arbol(n: i64){
    for i in 0..n {

        let mut output: String = "".to_string();
        for j in 0..(n - i) {
            output = output + " ".to_string();
        }

        for k in 0..i {
            output = output + "* ".to_string();
        }
        println!("{}",output);

    }
}



fn f(n: i64) -> i64 {
    if n < 2 {
        return 1;
    } else {
        return n * f(n - 1);
    }
}




fn ack(m: i64, n: i64) -> i64 {
    if m == 0 {
        return n + 1;
    } else if n == 0 {
        return ack(m - 1, 1);
    } else {
        return ack(m - 1, ack(m, n - 1));
    }
}



fn main() {


    println!("PINTANDO UN ARBOLITO");
    arbol(9);


    println!("--------------------------");
    println!("----ARCHIVO RECURSIVOS----");
    println!("--------------------------");

    


    println!("Factorial de 6 {}",f(6));
    println!("Factorial de 4 {}",f(4));
    println!("Factorial de 3 {}",f(3));
    println!("");

    println!("");
    println!("Ackerman de 3,0 {}",ack(3,0));
    println!("Ackerman de 2,8 {}",ack(2,8));
    println!("Ackerman de 2,1 {}",ack(2,1));
}




















fn main() {

    let mut a: i64 = 909;

        println!("=======================================================================");
        println!("==================================IF===================================");
        println!("=======================================================================");

        if (a > 50) {
            println!("IF CORRECTO");
        }else if (a == 56) {
            println!("IF INCORRECTO");
        } else {
            println!("IF INCORRECTO");
        }

        println!("");
        println!("=======================================================================");
        println!("=============================IFs ANIDADOS==============================");
        println!("=======================================================================");
        let aux: i64 = 10;
        if aux > 0 {
            println!("PRIMER IF CORRECTO");
            if true && (aux == 1) {
                println!("SEGUNDO IF INCORRECTO");
            } else if aux > 10 {
                println!("SEGUNDO IF INCORRECTO");
            } else {
                println!("SEGUNDO IF CORRECTO");
            }
        }else if aux <= 3 {
            println!("PRIMER IF INCORRECTO");
            if true && (aux == 1) {
                println!("SEGUNDO IF INCORRECTO");
            } else if aux > 10 {
                println!("SEGUNDO IF INCORRECTO");
            } else {
                println!("SEGUNDO IF CORRECTO");
            }
        } else if aux == a {
            println!("PRIMER IF INCORRECTO");
            if true && (aux == 1) {
                println!("SEGUNDO IF INCORRECTO");
            } else if aux > 10 {
                println!("SEGUNDO IF INCORRECTO");
            } else {
                println!("SEGUNDO IF CORRECTO");
            }
        }

        println!("");
        println!("=======================================================================");
        println!("=================================WHILE=================================");
        println!("=======================================================================");

        let mut index: i64 = 0;

        while (index >= 0) {

            if (index == 0) {
                index = index + 100;
            } else if (index > 50) {
                index = index / 2 - 25;
            } else {
                index = (index / 2) - 1;
            }

            println!("{}",index);
        }

        println!("");
        println!("=======================================================================");
        println!("================================WHILE-2================================");
        println!("=======================================================================");

        index = -2;
        index = index + 1;

        while (index != 12) {
            index = index + 1;
            if (index == 0 || index == 1 || index == 11 || index == 12) {
                println!("*********************************************************************************************************");
            } else if (index == 2) {
                println!("**********  ***************  ******                 ******                 ******              **********");
            } else if (index >= 3 && index <= 5) {
                println!("**********  ***************  ******  *********************  *************  ******  **********************");
            } else if (index == 6) {
                println!("**********  ***************  ******                 ******                 ******  **********************");
            } else if (index >= 7 && index <= 9) {
                println!("**********  ***************  ********************   ******  *************  ******  **********************");
            } else if (index == 10) {
                println!("**********                   ******                 ******  *************  ******              **********");
            }
        }

        println!("");
        println!("=======================================================================");
        println!("=============================TRANSFERENCIA=============================");
        println!("=======================================================================");

        a = -1;
        while (a < 5) {
            a = a + 1;
            if a == 3 {
                println!("a");
                continue;
            } else if a == 4 {
                println!("b");
                break;
            }

            println!("El valor de a es: {}, ", a);
        }

        println!("Se debió imprimir");
}


























fn main(){
    // paso 1    
    struct Carro {
        placa : String,
        color : String
    }

    // paso 2 construir un struct
    // paso 3 guardar en una variable

    let mut c1 = Carro {placa:"090pl0", color:"gris"};
    println!("{}", c1.placa);
    println!("{}", c1.color);

    c1.placa = "NUEVA PLACA";
    c1.color = "cafe".to_string(); 
    println!("{}", c1.placa);
    println!("{}", c1.color);
}







fn main(){
    // si lo crea 
    // creacion de los modelos de los struct

    struct Carro{
        motor: String,
        cilindraje: i64
    }

    struct Persona{
        nombre: String,
        anios: i64,
        carro_: Carro
    }


    //asignacion 
    // = bildStruct 


    let mut persona = Persona{
        nombre: "Mike".to_string(),
        anios: 15,
        carro_: Carro {
            motor: "Grande".to_string(),
            cilindraje: 1500
        }
    };


    let mut c1 : Carro = Carro{motor: "Grande".to_string(),cilindraje: 1500};


    println!("{}", persona.nombre);
    println!("{}", persona.anios);
    println!("{}", persona.carro_.motor);
    println!("{}", persona.carro_.cilindraje);

}





fn main(){
	struct Chasis{
	    material: String
	}
	
	struct Carro{
	    marca: String,
	    modelo: String,
	    chasis: Chasis
	}
	
	struct Persona{
	    nombre: String,
	    anios: i64,
	    carro: Carro
	}
	
	let varx = 3;
	let mut vary = 0;
	let mut varz = 1;
	while vary <= varx {
	    println!("{}",vary);
	    if true{
	        if true{
	            if true{
	                while true{
	                    println!("^:)");
	                    if varz == 3{
	                        break;
	                    }
	                    varz = varz + 1;
	                }
	            }
	        }
	    }
	    varz = 1;
	    vary = vary + 1;
	}
	
	let mut persona = Persona{
	    nombre: "Mike".to_string(),
	    anios: 30,
	    carro: Carro{
	                marca: "Toyota".to_string(), modelo: "Tercel".to_string(), chasis: Chasis{material: "Aluminio".to_string()}
	         }
	};

	println!("{}",persona.carro.marca);
	println!("{}",persona.carro.marca);
	println!("{}",persona.carro.chasis.material);
	println!("{}",persona.carro.chasis.material);
}










fn main() {

    //Agregar lo que consideren:
    
    // Operaciones aritmeticas, booleanas, declaraciones y asignaciones
    let cadena1: String = "imprimir".to_string();
    let aritmetica  = 7 - (5 + 10 * (2 + 4 * (5 + 2 * 3)) - 8 * 3 * 3) + 50 * (6 * 2);
    let booleana = true || false && true && (false || true) && false || (true || true);
    println!("{}", cadena1); // Imprime "imprimir"
    println!("{}", aritmetica); // Imprime 214

    // If's
    let a:i64 = 25;
    let b:i64 = 50;
    let c:i64 = 75;

    if booleana {
        println!("La suma de a + b es {}", a+b); // 75
    }


    if a > c || b < c {
        println!("Imprime");
    }else{
        println!("No imprime");
    }

    let cadena1: String = "Cadena uno".to_string();
    let cadena2: String = "Cadena dos";
    println!("{}",cadena1);
    println!("{}",cadena2);
    println!("----------------");
    println!("Nativas");

    let bflotante : f64 = 8 as f64;
    let cadenacopia: String = cadena1.clone();
    println!("Absoluto 1: {}", (-1.5 as i64).abs());
    println!("Absoluto 2: {}", (a).abs());
    println!("Raiz 1: {}",(4 as f64).sqrt());
    println!("Cadena Copia: {}",cadenacopia);

}














fn main() {
    let  a = [1,2,3] ;
    let  b = [1,2,3,[3,3]] ;
    let mut c :[i64;2] = [1,2,3];


    println!("{}", b[2]);
    println!("{}", a[2]);
}




